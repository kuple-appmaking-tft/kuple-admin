{"version":3,"sources":["reusable/DocsLink.js","views/users/UsersData.js","views/base/tables/Tables.js"],"names":["React","memo","props","name","text","rest","href","className","rel","target","usersData","id","닉네임","가입일","이메일","비밀번호","회원그룹","성별","신고횟수","상세","getBadge","status","fields","key","label","_style","width","sorter","filter","Tables","xs","lg","items","itemsPerPage","pagination","scopedSlots","item","color","striped","size","bordered","hover","dark"],"mappings":"qPA2BeA,MAAMC,MAxBJ,SAAAC,GAAU,IAEvBC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACGC,EAJmB,YAKpBH,EALoB,iBAOlBI,EAAOH,EAAI,kDAA8CA,GAASD,EAAMI,KAE9E,OACE,yBAAKC,UAAU,uBACb,kBAAC,KAAD,iBACMF,EADN,CAEEC,KAAMA,EACNE,IAAI,sBACJC,OAAO,SACPF,UAAU,uBAEV,2BAAOA,UAAU,cAAeH,GAAQ,c,iCCOjCM,IA5BG,CAChB,CAACC,GAAI,EAAGC,qBAAK,WAAYC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,IAC/G,CAACR,GAAI,EAAGC,qBAAK,cAAeC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACpH,CAACR,GAAI,EAAGC,qBAAK,gBAAiBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACpH,CAACR,GAAI,EAAGC,qBAAK,iBAAkBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,iCAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACvH,CAACR,GAAI,EAAGC,qBAAK,mBAAoBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,IACzH,CAACR,GAAI,EAAGC,qBAAK,oBAAkBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACrH,CAACR,GAAI,EAAGC,qBAAK,kBAAmBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACxH,CAACR,GAAI,EAAGC,qBAAK,iBAAkBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACrH,CAACR,GAAI,EAAGC,qBAAK,aAAcC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,iCAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACnH,CAACR,GAAI,EAAGC,qBAAK,kBAAgBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,IACrH,CAACR,GAAI,GAAIC,qBAAK,0BAAmBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACvH,CAACR,GAAI,GAAIC,qBAAK,iBAAkBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACxH,CAACR,GAAI,GAAIC,qBAAK,kBAAmBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACvH,CAACR,GAAI,GAAIC,qBAAK,gBAAiBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,iCAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACvH,CAACR,GAAI,GAAIC,qBAAK,qBAAsBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,IAC5H,CAACR,GAAI,GAAIC,qBAAK,uBAAkBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACtH,CAACR,GAAI,GAAIC,qBAAK,mBAAiBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACvH,CAACR,GAAI,GAAIC,qBAAK,mBAAeC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACnH,CAACR,GAAI,GAAIC,qBAAK,oBAAqBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,iCAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBAC3H,CAACR,GAAI,GAAIC,qBAAK,oBAAqBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,IAC3H,CAACR,GAAI,GAAIC,qBAAK,oBAAgBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACpH,CAACR,GAAI,GAAIC,qBAAK,iBAAkBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACxH,CAACR,GAAI,GAAIC,qBAAK,sBAAkBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,gBACtH,CAACR,GAAI,GAAIC,qBAAK,gBAAiBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,4BAASC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,IACvH,CAACR,GAAI,GAAIC,qBAAK,eAAgBC,qBAAK,aAAcC,qBAAK,gBAAiBC,2BAAM,GAAIC,2BAAM,qBAAOC,eAAI,SAAKC,2BAAM,EAAGC,eAAI,M,iCCzBtH,sDAcMC,EAAW,SAAAC,GACf,OAAQA,GACN,IAAK,SAAU,MAAO,UACtB,IAAK,WAAY,MAAO,YACxB,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,QAAS,MAAO,YAGdC,EAAS,CAAC,OAAO,aAAc,OAAQ,SAAU,CACrDC,IAAK,eACLC,MAAO,GACPC,OAAQ,CAAEC,MAAO,MACjBC,QAAQ,EACRC,QAAQ,IA+LKC,UA5LA,WACb,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,oBAEE,kBAAC,IAAD,CAAU5B,KAAK,YAEjB,kBAAC,IAAD,KACA,kBAAC,IAAD,CACE6B,MAAOtB,IACPY,OAAQA,EACRW,aAAc,EACdC,YAAU,EACVC,YAAe,CACb,OACE,SAACC,GAAD,OACE,4BACE,kBAAC,IAAD,CAAQC,MAAOjB,EAASgB,EAAKf,SAC1Be,EAAKf,gBAWtB,kBAAC,IAAD,CAAMS,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,sBAGA,kBAAC,IAAD,KACA,kBAAC,IAAD,CACEC,MAAOtB,IACPY,OAAQA,EACRgB,SAAO,EACPL,aAAc,EACdC,YAAU,EACVC,YAAe,CACb,OACE,SAACC,GAAD,OACE,4BACE,kBAAC,IAAD,CAAQC,MAAOjB,EAASgB,EAAKf,SAC1Be,EAAKf,iBAYxB,kBAAC,KAAD,KAEE,kBAAC,IAAD,CAAMS,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,wBAGA,kBAAC,IAAD,KACA,kBAAC,IAAD,CACEC,MAAOtB,IACPY,OAAQA,EACRiB,KAAK,KACLN,aAAc,EACdC,YAAU,EACVC,YAAe,CACb,OACE,SAACC,GAAD,OACE,4BACE,kBAAC,IAAD,CAAQC,MAAOjB,EAASgB,EAAKf,SAC1Be,EAAKf,gBAWtB,kBAAC,IAAD,CAAMS,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,uBAGA,kBAAC,IAAD,KACA,kBAAC,IAAD,CACEC,MAAOtB,IACPY,OAAQA,EACRkB,UAAQ,EACRP,aAAc,EACdC,YAAU,EACVC,YAAe,CACb,OACE,SAACC,GAAD,OACE,4BACE,kBAAC,IAAD,CAAQC,MAAOjB,EAASgB,EAAKf,SAC1Be,EAAKf,iBAaxB,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,2BAGA,kBAAC,IAAD,KACA,kBAAC,IAAD,CACEW,MAAOtB,IACPY,OAAQA,EACRmB,OAAK,EACLH,SAAO,EACPE,UAAQ,EACRD,KAAK,KACLN,aAAc,GACdC,YAAU,EACVC,YAAe,CACb,OACE,SAACC,GAAD,OACE,4BACE,kBAAC,IAAD,CAAQC,MAAOjB,EAASgB,EAAKf,SAC1Be,EAAKf,iBAUtB,kBAAC,KAAD,KACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,gCAGA,kBAAC,IAAD,KACA,kBAAC,IAAD,CACEW,MAAOtB,IACPY,OAAQA,EACRoB,MAAI,EACJD,OAAK,EACLH,SAAO,EACPE,UAAQ,EACRD,KAAK,KACLN,aAAc,GACdC,YAAU,EACVC,YAAe,CACb,OACE,SAACC,GAAD,OACE,4BACE,kBAAC,IAAD,CAAQC,MAAOjB,EAASgB,EAAKf,SAC1Be,EAAKf","file":"static/js/38.6891109d.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","const usersData = [\n  {id: 0, 닉네임: 'John Doe', 가입일: '2018/01/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '외부인', 성별: '여', 신고횟수: 0, 상세: ''},\n  {id: 1, 닉네임: 'Samppa Nori', 가입일: '2018/01/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '여', 신고횟수: 1, 상세: '비방'},\n  {id: 2, 닉네임: 'Estavan Lykos', 가입일: '2018/02/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '운영진', 성별: '여', 신고횟수: 1, 상세: '욕설'},\n  {id: 3, 닉네임: 'Chetan Mohamed', 가입일: '2018/02/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '슈퍼어드민', 성별: '여', 신고횟수: 3, 상세: '분란'},\n  {id: 4, 닉네임: 'Derick Maximinus', 가입일: '2018/03/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '여', 신고횟수: 0, 상세: ''},\n  {id: 5, 닉네임: 'Friderik Dávid', 가입일: '2018/01/21', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '운영진', 성별: '여', 신고횟수: 1, 상세: '비방'},\n  {id: 6, 닉네임: 'Yiorgos Avraamu', 가입일: '2018/01/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '남', 신고횟수: 1, 상세: '비방'},\n  {id: 7, 닉네임: 'Avram Tarasios', 가입일: '2018/02/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '운영진', 성별: '남', 신고횟수: 1, 상세: '욕설'},\n  {id: 8, 닉네임: 'Quintin Ed', 가입일: '2018/02/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '슈퍼어드민', 성별: '여', 신고횟수: 3, 상세: '분란'},\n  {id: 9, 닉네임: 'Enéas Kwadwo', 가입일: '2018/03/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '남', 신고횟수: 0, 상세: ''},\n  {id: 10, 닉네임: 'Agapetus Tadeáš', 가입일: '2018/01/21', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '운영진', 성별: '여', 신고횟수: 1, 상세: '비방'},\n  {id: 11, 닉네임: 'Carwyn Fachtna', 가입일: '2018/01/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '여', 신고횟수: 1, 상세: '비방'},\n  {id: 12, 닉네임: 'Nehemiah Tatius', 가입일: '2018/02/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '운영진', 성별: '여', 신고횟수: 1, 상세: '욕설'},\n  {id: 13, 닉네임: 'Ebbe Gemariah', 가입일: '2018/02/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '슈퍼어드민', 성별: '여', 신고횟수: 3, 상세: '분란'},\n  {id: 14, 닉네임: 'Eustorgios Amulius', 가입일: '2018/03/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '여', 신고횟수: 0, 상세: ''},\n  {id: 15, 닉네임: 'Leopold Gáspár', 가입일: '2018/01/21', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '운영진', 성별: '여', 신고횟수: 1, 상세: '비방'},\n  {id: 16, 닉네임: 'Pompeius René', 가입일: '2018/01/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '여', 신고횟수: 1, 상세: '비방'},\n  {id: 17, 닉네임: 'Paĉjo Jadon', 가입일: '2018/02/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '운영진', 성별: '여', 신고횟수: 1, 상세: '욕설'},\n  {id: 18, 닉네임: 'Micheal Mercurius', 가입일: '2018/02/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '슈퍼어드민', 성별: '여', 신고횟수: 3, 상세: '분란'},\n  {id: 19, 닉네임: 'Ganesha Dubhghall', 가입일: '2018/03/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '남', 신고횟수: 0, 상세: ''},\n  {id: 20, 닉네임: 'Hiroto Šimun', 가입일: '2018/01/21', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '운영진', 성별: '여', 신고횟수: 1, 상세: '비방'},\n  {id: 21, 닉네임: 'Vishnu Serghei', 가입일: '2018/01/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '여', 신고횟수: 1, 상세: '비방'},\n  {id: 22, 닉네임: 'Zbyněk Phoibos', 가입일: '2018/02/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '운영진', 성별: '여', 신고횟수: 1, 상세: '욕설'},\n  {id: 23, 닉네임: 'Aulus Agmundr', 가입일: '2018/01/01', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '재/휴학생', 성별: '남', 신고횟수: 0, 상세: ''},\n  {id: 42, 닉네임: 'Ford Prefect', 가입일: '2001/05/25', 이메일: 'test@test.com', 비밀번호: '', 회원그룹: '졸업생', 성별: '여', 신고횟수: 0, 상세: ''}\n]\n\nexport default usersData\n","import React from 'react'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\n\nimport usersData from '../../users/UsersData'\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Inactive': return 'secondary'\n    case 'Pending': return 'warning'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\nconst fields = ['name','registered', 'role', 'status', {\n  key: 'show_details',\n  label: '',\n  _style: { width: '1%' },\n  sorter: false,\n  filter: false\n}]\n\nconst Tables = () => {\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader>\n              Simple Table\n              <DocsLink name=\"CModal\"/>\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={fields}\n              itemsPerPage={5}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader>\n              Striped Table\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={fields}\n              striped\n              itemsPerPage={5}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <CRow>\n\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader>\n              Condensed Table\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={fields}\n              size=\"sm\"\n              itemsPerPage={5}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader>\n              Bordered Table\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={fields}\n              bordered\n              itemsPerPage={5}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n      </CRow>\n\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              Combined All Table\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={fields}\n              hover\n              striped\n              bordered\n              size=\"sm\"\n              itemsPerPage={10}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n        <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              Combined All dark Table\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={fields}\n              dark\n              hover\n              striped\n              bordered\n              size=\"sm\"\n              itemsPerPage={10}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Tables\n"],"sourceRoot":""}